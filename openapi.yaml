openapi: 3.0.1
info:
  title: Автомойка API
  description:  "учебное задание"
  version: 0.0.1
servers:
  - url: http://localhost:8000/api/v1
tags:
  - name: Пользователь
    description: Настройка аккаунта
  - name: Авто
    description: Управление автомобилями
  - name: Заказы
    description: Управление заказами
  - name: Автомойки
    description: Выбор автомойки
paths:
  /user:
      get:
        summary: Получить список пользователей
        tags: 
          - Пользователь
        description: Все пользователи
        operationId: UserArray
        responses:
            '200':
              description: Успешно
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
            '404':
              description: Пользователи не найдены
      
      post:
        tags:
          - Пользователь
        security:
        - oauth2:
            - write
        summary: Создать пользователя
        description: This can only be done by the logged in user.
        operationId: createUser
        requestBody:
          required: true
          description: Пользователь создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/User'
        responses:
          default:
            description: Выполнено успешно
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
              application/xml:
                schema:
                  $ref: '#/components/schemas/User'
  /user/{username}:
      put:
            tags:
              - Пользователь
            summary: Обновить
            description: Обновить информацию
            operationId: UpdateUser
            parameters:
              - name: username
                in: path
                description: name that need to be deleted
                required: true
                schema:
                  type: string
            requestBody:
              description: Update an existent user in the store
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/User'
                application/xml:
                  schema:
                    $ref: '#/components/schemas/User'
                application/x-www-form-urlencoded:
                  schema:
                    $ref: '#/components/schemas/User'
            responses:
              default:
                description: successful operation
      delete:
        tags:
          - Пользователь
        summary: Delete user
        description: This can only be done by the logged in user.
        operationId: deleteUser
        parameters:
          - name: username
            in: path
            description: The name that needs to be deleted
            required: true
            schema:
              type: string
        responses:
          '400':
            description: Invalid username supplied
          '404':
            description: User not found
  /auto: #надо ли при добавлении указывать id владельца??
      post:
        tags:
        - Авто
        summary: Добавить авто
        description: Добавить новое авто
        operationId: createAuto
        requestBody:
            description: Авто создано
            content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Auto'
                  application/xml:
                    schema:
                      $ref: '#/components/schemas/Auto'
                  application/x-www-form-urlencoded:
                    schema:
                      $ref: '#/components/schemas/Auto'
        responses:
                default:
                  description: Выполнено успешно
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Auto'
                    application/xml:
                      schema:
                        $ref: '#/components/schemas/Auto'
  /auto/{Number}:
    put:
            tags:
              - Авто
            summary: Обновить
            description: Обновить информацию
            operationId: UpdateAuto
            parameters:
              - name: Number
                in: path
                description: Госномер
                required: true
                schema:
                  type: string
            requestBody:
              description: Обновить информацию о существующем авто
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Auto'
                application/xml:
                  schema:
                    $ref: '#/components/schemas/Auto'
                application/x-www-form-urlencoded:
                  schema:
                    $ref: '#/components/schemas/Auto'
            responses:
              default:
                description: successful operation
    delete:
      tags:
        - Авто
      summary: Удалить авто по госномеру
      description: Удалить авто, введя его госномер
      operationId: deleteAuto
      parameters:
          - name: Number
            in: path
            description: Госномер машины
            required: true
            schema:
              type: string
      responses:
          '400':
            description: Неверный номер
          '404':
            description: Авто не найдено
  /wash:
    post:
      tags:
        - Автомойки
      summary: Добавить автомойку
      description: Добавить автомойку
      operationId: AddWash
      requestBody:
            description: Автомойка создана
            content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Wash'
                  application/xml:
                    schema:
                      $ref: '#/components/schemas/Wash'
                  application/x-www-form-urlencoded:
                    schema:
                      $ref: '#/components/schemas/Wash'
      responses:
                default:
                  description: Выполнено успешно
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Wash'
                    application/xml:
                      schema:
                        $ref: '#/components/schemas/Wash'
      
      
## Компоненты

components:
  schemas:
    Auto:
      type: object
      properties:
          id:
            type: integer
            format: int64
            example: 1
          Userid:
            type: integer
            format: int64
            example: 1
          Brand:
            type: string
            example: Toyota
          Model:
            type: string
            example: Mark 2
          Number:
            type: string
            example: М123ЯУ
      xml:
        name: auto
    User:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          username:
            type: string
            example: linariell
          firstName:
            type: string
            example: Polina
          lastName:
            type: string
            example: Vitkovskaya
          email:
            type: string
            example: p.vitkovskaya@email.com
          password:
            type: string
            example: '12345'
          phone:
            type: string
            example: '12345'
        xml:
          name: user
    Wash:
      type: object
      properties:
            id:
              type: integer
              format: int64
              example: 1
            Title:
              type: string
              example: Лучшая
            Services:
              type: array
              items: 
                type: string
              
              example: ['Химчистка','Помыть машину','Помыть машину (хорошо)']
            Coords:
              type: array
              items: 
                type: number
              example: [46.948301, 142.724515]
      xml:
          name: wash
  securitySchemes:
      oauth2:
        type: oauth2
        flows:
          authorizationCode:
            authorizationUrl: https://example.com/oauth/authorize
            tokenUrl: https://example.com/oauth/token
            scopes:
              read: Read access to data
              write: Write access to data
